# Amazed by the magical spell (Finished Bag containing X candies becomes [X/2])
  Monk can now have a lot more candies! 
  But he has to return home in K minutes. In a single minute,
  Monk can consume all the candies in a single bag, regardless of the number of candies in it.
  Find the maximum number of candies that Monk can consume.

Constraints:
1 ≤ T ≤ 10       (Number of test cases)
1 ≤ N ≤ 10^5     (Number of bags)
0 ≤ K ≤ 10^5     (Time limit in minutes) 
0 ≤ Ai ≤ 10^10   (Number of candies in i'th bag)

Sample: input: 1
               5 3
               2 1 7 4 2

        output: 14 (7+4+3)

int main()
{
    int T;
    cin>>T;
    while(T--){
        int n,k;
        cin>>n>>k;
        multiset<long long> bags;
        for(int i=0;i<n;i++){
            long long candyCount;
            cin>>candyCount;
            bags.insert(candyCount);
        }
        long long total=0;
        for(int i=0;i<k;i++){
            auto itLast= (--bags.end());
            long long candyCount= *itLast;
            total+=candyCount;
            bags.erase(itLast);
            bags.insert(candyCount/2);
        }
        cout<<total<<endl;
    }

}
