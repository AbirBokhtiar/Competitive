Normal sorting -> increasing/ascending order
Inbuilt sorting algorithm triggers swap only when false is returned.


#include <bits/stdc++.h>
using namespace std;

bool cmp(pair<int,int>a, pair<int,int>b)
{
    if(a.first!=b.first){
        if(a.first>b.first) return false;   //1st element increasing
        return true;
    }
    else{
        if(a.second<b.second)return false;  //if same 1st element then 2nd element decreasing
        return true;
    }
}

int main()
{
    int n;
    cin>>n;
    vector<pair<int,int>> v(n);
    for(int i=0;i<n;i++){
        cin>>v[i].first>>v[i].second;
    }
    sort(v.begin(),v.end(),cmp);
    for(int i=0;i<n;i++){
        cout<<v[i].first<<" "<<v[i].second<<endl;
    }
}

**Optimisation**

bool cmp(pair<int,int>a, pair<int,int>b)
{
    if(a.first!=b.first){
        return a.first<b.first;  //1st element increasing order
    }
    else{
        return a.second>b.second;  //if same 1st element then 2nd element decreasing
    }
}